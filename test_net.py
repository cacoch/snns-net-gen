import pytest
from testfixtures import compare

from net import unit_definiton, split_by_layers, print_connection

test_u = "  1 |          |          |  0.00000 |  0.00000 | i  |  2, 2, 0 |||"

test_conn ="""    82 |      |   1: 0.00000,   2: 0.00000,   3: 0.00000,   4: 0.00000,   5: 0.00000,   6: 0.00000,   7: 0.00000,   8: 0.00000,
                  9: 0.00000,  10: 0.00000,  11: 0.00000,  12: 0.00000,  13: 0.00000,  14: 0.00000,  15: 0.00000,  16: 0.00000,
                 17: 0.00000,  18: 0.00000,  19: 0.00000,  20: 0.00000,  21: 0.00000,  22: 0.00000,  23: 0.00000,  24: 0.00000,
                 25: 0.00000,  26: 0.00000,  27: 0.00000,  28: 0.00000,  29: 0.00000,  30: 0.00000,  31: 0.00000,  32: 0.00000,
                 33: 0.00000,  34: 0.00000,  35: 0.00000,  36: 0.00000,  37: 0.00000,  38: 0.00000,  39: 0.00000,  40: 0.00000,
                 41: 0.00000,  42: 0.00000,  43: 0.00000,  44: 0.00000,  45: 0.00000,  46: 0.00000,  47: 0.00000,  48: 0.00000,
                 49: 0.00000,  50: 0.00000,  51: 0.00000,  52: 0.00000,  53: 0.00000,  54: 0.00000,  55: 0.00000,  56: 0.00000,
                 57: 0.00000,  58: 0.00000,  59: 0.00000,  60: 0.00000,  61: 0.00000,  62: 0.00000,  63: 0.00000,  64: 0.00000,
                 65: 0.00000,  66: 0.00000,  67: 0.00000,  68: 0.00000,  69: 0.00000,  70: 0.00000,  71: 0.00000,  72: 0.00000,
                 73: 0.00000,  74: 0.00000,  75: 0.00000,  76: 0.00000,  77: 0.00000,  78: 0.00000,  79: 0.00000,  80: 0.00000,
                 81: 0.00000"""

def test_constructor():
    new_unit = unit_definiton(1,"i","2, 2, 0") 
    assert new_unit == test_u

@pytest.mark.parametrize("i,h,o,expected", 
                         [(1,[1],1 ,   [[1],[2],[3]]),
                          (1,[1,1],1,  [[1],[2],[3],[4]]),
                          (1,[2],1,    [[1],[2,3],[4]]), 
                          (1,[2],2,    [[1],[2,3],[4,5]]),
                          (1,[2],3,    [[1],[2,3],[4,5,6]]), 
                          (2,[2],2,    [[1,2],[3,4],[5,6]]),
                          (3,[3],3,    [[1,2,3],[4,5,6],[7,8,9]]),
                          ])

def test_split(i,h,o, expected):
    assert split_by_layers(i,h,o) == expected
    
def test_print_connection():
    compare(print_connection( {82:[n for n in range(1,82)]}) , test_conn, show_whitespace=True)


